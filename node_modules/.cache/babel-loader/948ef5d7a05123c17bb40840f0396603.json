{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Project III\\\\src\\\\admin\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport swal from 'sweetalert';\n\nfunction Register() {\n  _s();\n\n  const history = useHistory();\n  const [registerInput, setRegister] = useState({\n    name: '',\n    email: '',\n    password: '',\n    error_list: []\n  });\n\n  const handleInput = e => {\n    e.persist();\n    setRegister({ ...registerInput,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const registerSubmit = e => {\n    e.preventDefault();\n    const data = {\n      name: registerInput.name,\n      email: registerInput.email,\n      password: registerInput.password,\n      error_list: []\n    };\n    axios.get('/sanctum/csrf-cookie').then(response => {\n      axios.post(`/api/register`, data).then(res => {\n        if (res.data.status === 200) {\n          localStorage.setItem('auth_token', res.data.token);\n          localStorage.setItem('auth_token', res.data.usename);\n          swal(\"Success\", res.data.message, \"succses\");\n          history.push('/home');\n        } else {\n          setRegister({ ...registerInput,\n            error_list: res.data.validation_errors\n          });\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup_page\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      className: \"form-group\",\n      onSubmit: registerSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          onChange: handleInput,\n          value: registerInput.name,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: registerInput.error_list.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          onChange: handleInput,\n          value: registerInput.email,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: registerInput.error_list.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          onChange: handleInput,\n          value: registerInput.password,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: registerInput.error_list.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success btn-md mybtn\",\n        children: \"\\u0110\\u0103ng k\\xFD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \" \\u0110\\u0103ng nh\\u1EADp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"bUWjXHskvt2Y1zUjUKiTAC9VctM=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Project III/src/admin/Signup.js"],"names":["React","useState","Link","useHistory","axios","swal","Register","history","registerInput","setRegister","name","email","password","error_list","handleInput","e","persist","target","value","registerSubmit","preventDefault","data","get","then","response","post","res","status","localStorage","setItem","token","usename","message","push","validation_errors"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\n\r\nfunction Register() {\r\n\r\n    const history = useHistory();\r\n    const [registerInput, setRegister] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        error_list: [],\r\n    });\r\n    const handleInput = (e) => {\r\n        e.persist();\r\n        setRegister({...registerInput, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const registerSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            name: registerInput.name,\r\n            email: registerInput.email,\r\n            password: registerInput.password,\r\n            error_list: [],\r\n        }\r\n        axios.get('/sanctum/csrf-cookie').then(response => {\r\n            axios.post(`/api/register`, data).then(res =>{\r\n                if(res.data.status === 200)\r\n                {\r\n                    localStorage.setItem('auth_token', res.data.token);\r\n                    localStorage.setItem('auth_token', res.data.usename);\r\n                    swal(\"Success\", res.data.message, \"succses\");\r\n                    history.push('/home');\r\n                }\r\n                else\r\n                {\r\n                    setRegister({...registerInput, error_list: res.data.validation_errors});\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='signup_page'>\r\n            <br />\r\n            <h2>Register</h2>\r\n            <br />\r\n            <form autoComplete=\"off\" className='form-group' onSubmit={registerSubmit}>\r\n                <div>\r\n                    <label>Name</label>\r\n                    <input type=\"text\" name = \"name\"\r\n                        onChange={handleInput} value={registerInput.name}  className='form-control'/>\r\n                        <span>{registerInput.error_list.name}</span>\r\n                </div>\r\n                <div>\r\n                    <label>Email</label>\r\n                    <input type=\"email\" name =\"email\"\r\n                        onChange={handleInput} value={registerInput.email}  className='form-control'/>\r\n                        <span>{registerInput.error_list.email}</span>\r\n                </div>\r\n                <div>\r\n                    <label>Password</label>\r\n                    <input type=\"password\" name = \"password\"\r\n                        onChange={handleInput} value={registerInput.password}  className='form-control'/>\r\n                        <span>{registerInput.error_list.password}</span>\r\n                </div>\r\n                <button type=\"submit\" className='btn btn-success btn-md mybtn'>Đăng ký</button>\r\n            </form>\r\n            <span>Already have an account?  \r\n                <Link to=\"/login\"> Đăng nhập</Link>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\nexport default Register\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}