{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Project III\\\\src\\\\admin\\\\AddProducts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddProducts = _ref => {\n  _s();\n\n  let {\n    contacts,\n    addContact\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const history = useHistory();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const checkContactEmailExists = contacts.filter(contact => contact.email === email ? contact : null);\n    const checkContactPhoneExists = contacts.filter(contact => contact.phone === phone ? contact : null);\n\n    if (!email || !name || !phone) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n\n    if (checkContactEmailExists.length > 0) {\n      return toast.error(\"This email already exists!!\");\n    }\n\n    if (checkContactPhoneExists.length > 0) {\n      return toast.error(\"This phone number already exists!!\");\n    }\n\n    const data = {\n      id: contacts.length > 0 ? contacts[contacts.length - 1].id + 1 : 0,\n      email,\n      name,\n      phone\n    };\n    addContact(data);\n    toast.success(\"Contact added successfully!!\");\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center text-dark py-3 display-2\",\n      children: \"Add Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 p-5 mx-auto shadow\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              placeholder: \"Full name\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"email\",\n              placeholder: \"Email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"number\",\n              placeholder: \"Phone\",\n              value: phone,\n              onChange: e => setPhone(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"btn btn-block btn-dark\",\n              type: \"submit\",\n              value: \"Add Student\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddProducts, \"eYo2FFLao4IIN2ioU+c23vcrusQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = AddProducts;\n\nconst mapStateToProps = state => ({\n  contacts: state\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addContact: data => {\n    dispatch({\n      type: \"ADD_CONTACT\",\n      payload: data\n    });\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProducts);\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProducts\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Project III/src/admin/AddProducts.js"],"names":["React","useState","connect","useHistory","toast","AddProducts","contacts","addContact","name","setName","email","setEmail","phone","setPhone","history","handleSubmit","e","preventDefault","checkContactEmailExists","filter","contact","checkContactPhoneExists","warning","length","error","data","id","success","push","target","value","mapStateToProps","state","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst AddProducts = ({ contacts, addContact }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const checkContactEmailExists = contacts.filter((contact) =>\r\n      contact.email === email ? contact : null\r\n    );\r\n    const checkContactPhoneExists = contacts.filter((contact) =>\r\n      contact.phone === phone ? contact : null\r\n    );\r\n\r\n    if (!email || !name || !phone) {\r\n      return toast.warning(\"Please fill in all fields!!\");\r\n    }\r\n    if (checkContactEmailExists.length > 0) {\r\n      return toast.error(\"This email already exists!!\");\r\n    }\r\n    if (checkContactPhoneExists.length > 0) {\r\n      return toast.error(\"This phone number already exists!!\");\r\n    }\r\n\r\n    const data = {\r\n      id: contacts.length > 0 ? contacts[contacts.length - 1].id + 1 : 0,\r\n      email,\r\n      name,\r\n      phone,\r\n    };\r\n\r\n    addContact(data);\r\n    toast.success(\"Contact added successfully!!\");\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <h1 className=\"text-center text-dark py-3 display-2\">Add Post</h1>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 p-5 mx-auto shadow\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"Full name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"number\"\r\n                placeholder=\"Phone\"\r\n                value={phone}\r\n                onChange={(e) => setPhone(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"btn btn-block btn-dark\"\r\n                type=\"submit\"\r\n                value=\"Add Student\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addContact: (data) => {\r\n    dispatch({ type: \"ADD_CONTACT\", payload: data });\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProducts);\r\n"]},"metadata":{},"sourceType":"module"}